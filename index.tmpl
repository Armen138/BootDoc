<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
	<meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
	<meta name="generator" content="JsDoc Toolkit" />		
	<title>JsDoc Reference - Index</title>

    <!-- Le styles -->
	<style type="text/css">
		{+include("css/bootstrap.css")+}
		body {
			padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
		}
		{+include("css/bootstrap-responsive.css")+}
		.attributes {
			width: 100px;			
		}
		.light {
			font-weight: 200;
			font-style: italic;
		}
		{+include("css/rainbow.css")+}		
	</style>	
    
    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    <link rel="shortcut icon" href="../assets/ico/favicon.ico">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../assets/ico/apple-touch-icon-114-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../assets/ico/apple-touch-icon-72-precomposed.png">
    <link rel="apple-touch-icon-precomposed" href="../assets/ico/apple-touch-icon-57-precomposed.png">
  </head>

  <body>

    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a class="brand" href="#">
			{! 
				if (JSDOC.opt.D.project) {
					output += JSDOC.opt.D.project;
				} else {
					output += "Project name";
				}
			!}
			  </a>
          <div class="nav-collapse">
            <ul class="nav">
              <li class="active"><a href="index.html">Home</a></li>
				<li class="dropdown">
					<a href="#" class="dropdown-toggle" data-toggle="dropdown">Classes<b class="caret"></b></a>
					<ul class="dropdown-menu">
						{!
							output += publish.classesIndex;
						!}
					</ul>
				</li>
				<li class="dropdown">
					<a href="#" class="dropdown-toggle" data-toggle="dropdown">Files<b class="caret"></b></a>
					<ul class="dropdown-menu">
						{!
							output += publish.filesIndex;
						!}
					</ul>
				</li>				
              
            </ul>
			<form class="navbar-search pull-right">
				<input name="q" type="text" class="search-query" placeholder="Search">
			</form>			
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>

    <div class="container" id="docbody">
		<div class="hero-unit">
			<h1>documentation</h1>
			<p>generated by jsDoc-toolkit</p>
		</div>  
    </div> <!-- /container -->
	<div class="container">
		<!-- jsDoc footer -->
		<div class="fineprint" style="clear:both">
			<if test="JSDOC.opt.D.copyright">&copy;{+JSDOC.opt.D.copyright+}&nbsp;</if>
			Documentation generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blankt">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}
		</div>	
	</div>
    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
	
	<script>
		{+include("js/jquery.min.js")+}
		{+include("js/bootstrap.min.js")+}
		{+include("js/rainbow.min.js")+}
		var classList = JSON.parse("{+publish.classesObject+}");
		function updateLocation(className) {
			var loc = window.location.toString();
			loc = loc.split('#')[0];
			if(loc.indexOf('?') !== -1) {
				loc = loc.split('?')[0];
			}
			loc += "#!" + className;
			window.location = loc;
		}
		function loadHashInfo() {
			var locationDetails = window.location.toString().split('#!')[1];
			if(locationDetails) {		
				var locationComponents = locationDetails.split('#'),
					locationFile = locationComponents[0],
					locationHashtag = locationComponents[1] || "",
					file = "symbols/" + locationFile + ".html#" + locationHashtag;			
				loadPage(file);
			}		
		}
		function loadPage(href) {			
			var findClass = /symbols.(.*).html/,
				matches = href.match(findClass),//findClass.exec(href);
				className = matches ? matches[1] : "";
			updateLocation(className);			
			$("#docbody").load(href, function() {				
				//$('.popinheritance a').popover({title: $(this).html(), content: "le loading"} );				
				$('.popinheritance a').each(function() {
					var popTarget = $(this);
					$.get($(this).attr("href"), function(data) {
						var doc = $(data).find("#" + popTarget.html());
						var title = doc.find(".title").detach();
						popTarget.popover({title: title.html(), content: doc.html() });
					}, "html");					
				});
				Rainbow.color();
			});
		}
		$('.popinheritance a').live("click", function(event) {
			event.preventDefault();
			$(this).popover("toggle");
		});
		$(".classlink a").live("click", function(event) {
			event.preventDefault();
			var classlink = $(this);
			loadPage($(this).attr("href"));
		});

		$(window).bind("hashchange", function() {
			loadHashInfo();		
		});
		if(window.location.toString().indexOf('?q=') !== -1) {
			var searchclass = window.location.toString().split('?q=')[1].replace("+", " "),
				file = "symbols/" + searchclass + ".html";
			loadPage(file);
		} else {
			loadHashInfo();
		}
		$('.search-query').typeahead({source: classList});
	</script>	    
  </body>
</html>
